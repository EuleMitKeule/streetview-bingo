openapi: "3.0.0"

info:
  title: Street View Bingo
  version: "0.1"

servers:
  - url: /api/

paths:

  #/lobby/create?token=xxxxxxxxxxxxxxxx
  /lobby/:

    post:
      summary: Creates a new lobby
      operationId: api.lobby_create_post
      tags:
        - Lobby
      parameters:
        - in: query
          name: token
          description: The user token of the user creating the lobby
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns unique lobby token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lobby'

    get:
      summary: Gets info about a lobby
      operationId: api.lobby_get
      tags:
        - Lobby
      parameters:
        - in: query
          name: lobby_token
          description: The lobby token of the lobby to obtain info on
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns information about the lobby
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lobby'

  #/lobby/join?lobby_token=xxxxxxxxxxxxxxxx&token=xxxxxxxxxxxxxxxx
  /lobby/<lobby_token>/join:
    post:
      summary: Joins a lobby
      operationId: api.lobby_join_post
      tags:
        - Lobby
      parameters:
        - in: query
          name: lobby_token
          description: The lobby token of the lobby to join
          required: true
          schema:
            type: string
        - in: query
          name: token
          description: The user token of the user joining the lobby
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns OK if lobby was joined successfully

  #/lobby/xxxxxxxxxxxxxxxx/game
  /lobby/{lobby_token}/game/:
    post:
      summary: Creates a new game of streetview bingo
      operationId: api.game_post
      tags:
        - Game
      parameters:
        - in: path
          name: lobby_token
          description: The lobby token of the lobby to create the game in
          required: true
          schema:
            type: string
      requestBody:
        description: Contains the game information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Returns the id of the created game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  #/lobby/xxxxxxxxxxxxxxxx/game/xxx/words/xxx/xxx
  /lobby/{lobby_token}/game/{game_id}/words/{word_id}/{user_id}:
    post:
      summary: Sets word as found for specified user
      operationId: api.game_words_post
      tags:
        - Game
      parameters:
        - in: path
          name: lobby_token
          description: The token of the lobby in which the game is running
          required: true
          schema:
            type: string
        - in: path
          name: game_id
          description: The id of the game to set the word in
          required: true
          schema:
            type: integer
        - in: path
          name: word_id
          description: The id of the word to set
          required: true
          schema:
            type: integer
        - in: path
          name: user_id
          description: The id of user to set the word to found on
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns OK if the word could be set as found

  #/words?length=9
  /words:
    get:
      summary: Gets list of suggested words
      operationId: api.words_get
      tags:
        - Words
      parameters:
        - in: query
          name: length
          description: The length of the words list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns list of suggested words of requested length
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Word'

components:
  schemas:
    Lobby:
      type: object
      properties:
        id:
          type: integer
        user_ids:
          type: array
          items:
            type: integer
        owner_id:
          type: integer
        lobby_token:
          type: string
    Word:
      type: object
      properties:
        id:
            type: integer
        value:
          type: string
    Game:
      type: object
      properties:
        id:
          type: integer
        token:
          type: string